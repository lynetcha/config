###############################################################
#                                           Tmux Plugin Manager
###############################################################
# # List of plugins
# # Supports `github_username/repo` or full git repo URLs
# set -g @tpm_plugins '              \
#   tmux-plugins/tpm                 \
#   tmux-plugins/tmux-sensible       \
#   tmux-plugins/tmux-yank           \
# '
# # Other examples:
# # github_username/plugin_name    \
# # git@github.com/user/plugin     \
# # git@bitbucket.com/user/plugin  \
# 
# # Initializes TMUX plugin manager.
# # Keep this line at the very bottom of tmux.conf.
# run-shell '~/.tmux/plugins/tpm/tpm'
###############################################################


# For OSX vim, tmux resize using <C-arrowkeys> does not work.
# Follow the following answer to fix. Also, disable system default
# <C-arrowkey> mapping
# http://superuser.com/questions/660013/resizing-pane-is-not-working-for-tmux-on-mac

# Improve colors
set -g default-terminal 'screen-256color'
# set -g focus-events on
set-option -g pane-active-border-fg blue
set-option -g status-left '#P'

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg colour236 
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg colour236 
set-window-option -g window-status-current-attr bright

set-option -ga update-environment ' DISPLAY'
# set-environment -g DISPLAY $DISPLAY

# TMUX mouse reisze pane
set -g mode-mouse on 
set -g mouse-resize-pane on 
set -g mouse-select-pane on 
set -g mouse-select-window on
set-option -g mode-mouse on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-window-option -g aggressive-resize on

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# vim style 
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# ZSH compatible copy http://unix.stackexchange.com/questions/15715/getting-tmux-to-copy-a-buffer-to-the-clipboard/70798#70798
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "xclip -sel clip -i"
bind-key ] run-shell "xclip -sel clip -o | tmux load-buffer - ; tmux paste-buffer" 

# # Copy into clipboard
# bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -selection clipboard\""
# # Paste from clipboard
# bind C-v run "xclip -o -selection clipboard | tmux load-buffer - ; tmux paste-buffer"
# # Copy into primary
# bind C-y choose-buffer "run \"tmux save-buffer -b %% - | xclip -i \""
# # Paste from primary
# bind C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# bind [ copy-mode \;                                                        \
#     bind -n ] run                                                          \
#     "tmux send-keys Enter;                                                 \
#      tmux show-buffer | xclip -i -selection clipboard;                     \
#      tmux unbind -n C-];                                                   \
#      tmux unbind -n ]" \;                                                  \
#     bind -n C-] run                                                        \
#     "tmux send-keys Enter;                                                 \
#      tmux show-buffer | perl -pe 's/\n//' | xclip -i -selection clipboard; \
#      tmux unbind -n C-];                                                   \
#      tmux unbind -n ]"

# move x clipboard into tmux paste buffer
# bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xclip"
# bind C-c run "tmux save-buffer - | xclip -selection c"\; display-message "Buffer copied to clipboard"
# bind -t vi-copy y copy-pipe "xclip"
# bind C-p run "xclip -o | tmux load-buffer -
# move tmux copy buffer into x clipboard
# bind C-y run "tmux save-buffer - | xclip -i -selection clipboard"
